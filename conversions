function dipUnitsToPixels(dipUnits)
{
  var DENSITY_SMALL_LDPI = 120;
	var DENSITY_BASELINE_MDPI = 160;
	var DENSITY_HIGH_HDPI = 240;
	var DENSITY_EXTRA_HIGH_XHDPI = 320;
	var ret;
	
	switch (Ti.Platform.displayCaps.dpi) {
		case DENSITY_SMALL_LDPI:
			ret = (dipUnits * (Ti.Platform.displayCaps.dpi / DENSITY_SMALL_LDPI));
		break;
		
		case DENSITY_BASELINE_MDPI:
			ret = (dipUnits * (Ti.Platform.displayCaps.dpi / DENSITY_BASELINE_MDPI));
		break;
		
		case DENSITY_HIGH_HDPI:
			ret = (dipUnits * (Ti.Platform.displayCaps.dpi / DENSITY_HIGH_HDPI));
		break;
		
		case DENSITY_EXTRA_HIGH_XHDPI:
			ret = (dipUnits * (Ti.Platform.displayCaps.dpi / DENSITY_EXTRA_HIGH_XHDPI));
		break;
		
		default:
			ret = dipUnits;
	}
	
	return ret;
}

function pixelsToDipUnits(pixels)
{
	var DENSITY_SMALL_LDPI = 120;
	var DENSITY_BASELINE_MDPI = 160;
	var DENSITY_HIGH_HDPI = 240;
	var DENSITY_EXTRA_HIGH_XHDPI = 320;
	var ret;
	
	switch (Ti.Platform.displayCaps.dpi) {
		case DENSITY_SMALL_LDPI:
			ret = (dipUnits / (Ti.Platform.displayCaps.dpi / DENSITY_SMALL_LDPI));
		break;
		
		case DENSITY_BASELINE_MDPI:
			ret = (dipUnits / (Ti.Platform.displayCaps.dpi / DENSITY_BASELINE_MDPI));
		break;
		
		case DENSITY_HIGH_HDPI:
			ret = (dipUnits / (Ti.Platform.displayCaps.dpi / DENSITY_HIGH_HDPI));
		break;
		
		case DENSITY_EXTRA_HIGH_XHDPI:
			ret = (dipUnits / (Ti.Platform.displayCaps.dpi / DENSITY_EXTRA_HIGH_XHDPI));
		break;
		
		default:
			ret = dipUnits;
	}
	
	return ret;
}
